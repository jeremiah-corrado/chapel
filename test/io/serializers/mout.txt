***deserializer init***
===== writing: =====
{ east : west , hello : goodbye , north : south , day : night }
--------------------
serializing value: { east : west , hello : goodbye , north : south , day : night }
			emitting mapping start event
serializing value: east
			emitting scalar event: east
serializing value: west
			emitting scalar event: west
serializing value: hello
			emitting scalar event: hello
serializing value: goodbye
			emitting scalar event: goodbye
serializing value: north
			emitting scalar event: north
serializing value: south
			emitting scalar event: south
serializing value: day
			emitting scalar event: day
serializing value: night
			emitting scalar event: night
			emitting mapping end event
--- !<%21>
east: west
hello: goodbye
north: south
day: night
...

====================
serializing value: { east : west , hello : goodbye , north : south , day : night }
			emitting mapping start event
serializing value: east
			emitting scalar event: east
serializing value: west
			emitting scalar event: west
serializing value: hello
			emitting scalar event: hello
serializing value: goodbye
			emitting scalar event: goodbye
serializing value: north
			emitting scalar event: north
serializing value: south
			emitting scalar event: south
serializing value: day
			emitting scalar event: day
serializing value: night
			emitting scalar event: night
			emitting mapping end event
-------------------
--- !<%21>
east: west
hello: goodbye
north: south
day: night
...


-------------------
***deserializer init***
deserializing type: map(string,string,false)
		***deserializer copy init***
		expecting event: MappingStart
Initializing with file offset: 0
deserializing type: string
		expecting event: Scalar
	Got: east
deserializing type: string
		expecting event: Scalar
	Got: west
deserializing type: string
		expecting event: Scalar
	Got: hello
deserializing type: string
		expecting event: Scalar
	Got: goodbye
deserializing type: string
		expecting event: Scalar
	Got: north
deserializing type: string
		expecting event: Scalar
	Got: south
deserializing type: string
		expecting event: Scalar
	Got: day
deserializing type: string
		expecting event: Scalar
	Got: night
deserializing type: string
		expecting event: Scalar
		WARNING: unexpected event: MappingEnd
		expecting event: MappingEnd
		***deserializer deinit***
		***deserializer deinit***
SUCCESS: map(string,string,false)
		***deserializer deinit***
		***deserializer deinit***
===== writing: =====
{ 713 : Houston , 212 : NYC , 206 : Seattle }
--------------------
serializing value: { 713 : Houston , 212 : NYC , 206 : Seattle }
			emitting mapping start event
serializing value: 713
			emitting scalar event: 713
serializing value: Houston
			emitting scalar event: Houston
serializing value: 212
			emitting scalar event: 212
serializing value: NYC
			emitting scalar event: NYC
serializing value: 206
			emitting scalar event: 206
serializing value: Seattle
			emitting scalar event: Seattle
			emitting mapping end event
--- !<%21>
713: Houston
212: NYC
206: Seattle
...

====================
serializing value: { 713 : Houston , 212 : NYC , 206 : Seattle }
			emitting mapping start event
serializing value: 713
			emitting scalar event: 713
serializing value: Houston
			emitting scalar event: Houston
serializing value: 212
			emitting scalar event: 212
serializing value: NYC
			emitting scalar event: NYC
serializing value: 206
			emitting scalar event: 206
serializing value: Seattle
			emitting scalar event: Seattle
			emitting mapping end event
-------------------
--- !<%21>
713: Houston
212: NYC
206: Seattle
...


-------------------
***deserializer init***
deserializing type: map(int(64),string,false)
		***deserializer copy init***
		expecting event: MappingStart
Initializing with file offset: 0
deserializing type: int(64)
		expecting event: Scalar
	Got: 713
deserializing type: string
		expecting event: Scalar
	Got: Houston
deserializing type: int(64)
		expecting event: Scalar
	Got: 212
deserializing type: string
		expecting event: Scalar
	Got: NYC
deserializing type: int(64)
		expecting event: Scalar
	Got: 206
deserializing type: string
		expecting event: Scalar
	Got: Seattle
deserializing type: int(64)
		expecting event: Scalar
		WARNING: unexpected event: MappingEnd
		expecting event: MappingEnd
		***deserializer deinit***
		***deserializer deinit***
SUCCESS: map(int(64),string,false)
		***deserializer deinit***
		***deserializer deinit***
===== writing: =====
{ Banana : (x = 1, y = -10.0) , Apple : (x = 5, y = 42.0) , Orange : (x = 13, y = 106.7) }
--------------------
serializing value: { Banana : (x = 1, y = -10.0) , Apple : (x = 5, y = 42.0) , Orange : (x = 13, y = 106.7) }
			emitting mapping start event
serializing value: Banana
			emitting scalar event: Banana
serializing value: (x = 1, y = -10.0)
	starting record: R size: 2
			emitting mapping start event
		serializing field: x = 1
			emitting scalar event: x
serializing value: 1
			emitting scalar event: 1
		serializing field: y = -10.0
			emitting scalar event: y
serializing value: -10.0
			emitting scalar event: -10.0
	ending record
			emitting mapping end event
serializing value: Apple
			emitting scalar event: Apple
serializing value: (x = 5, y = 42.0)
	starting record: R size: 2
			emitting mapping start event
		serializing field: x = 5
			emitting scalar event: x
serializing value: 5
			emitting scalar event: 5
		serializing field: y = 42.0
			emitting scalar event: y
serializing value: 42.0
			emitting scalar event: 42.0
	ending record
			emitting mapping end event
serializing value: Orange
			emitting scalar event: Orange
serializing value: (x = 13, y = 106.7)
	starting record: R size: 2
			emitting mapping start event
		serializing field: x = 13
			emitting scalar event: x
serializing value: 13
			emitting scalar event: 13
		serializing field: y = 106.7
			emitting scalar event: y
serializing value: 106.7
			emitting scalar event: 106.7
	ending record
			emitting mapping end event
			emitting mapping end event
--- !<%21>
Banana: !R
  x: 1
  y: -10.0
Apple: !R
  x: 5
  y: 42.0
Orange: !R
  x: 13
  y: 106.7
...

====================
serializing value: { Banana : (x = 1, y = -10.0) , Apple : (x = 5, y = 42.0) , Orange : (x = 13, y = 106.7) }
			emitting mapping start event
serializing value: Banana
			emitting scalar event: Banana
serializing value: (x = 1, y = -10.0)
	starting record: R size: 2
			emitting mapping start event
		serializing field: x = 1
			emitting scalar event: x
serializing value: 1
			emitting scalar event: 1
		serializing field: y = -10.0
			emitting scalar event: y
serializing value: -10.0
			emitting scalar event: -10.0
	ending record
			emitting mapping end event
serializing value: Apple
			emitting scalar event: Apple
serializing value: (x = 5, y = 42.0)
	starting record: R size: 2
			emitting mapping start event
		serializing field: x = 5
			emitting scalar event: x
serializing value: 5
			emitting scalar event: 5
		serializing field: y = 42.0
			emitting scalar event: y
serializing value: 42.0
			emitting scalar event: 42.0
	ending record
			emitting mapping end event
serializing value: Orange
			emitting scalar event: Orange
serializing value: (x = 13, y = 106.7)
	starting record: R size: 2
			emitting mapping start event
		serializing field: x = 13
			emitting scalar event: x
serializing value: 13
			emitting scalar event: 13
		serializing field: y = 106.7
			emitting scalar event: y
serializing value: 106.7
			emitting scalar event: 106.7
	ending record
			emitting mapping end event
			emitting mapping end event
-------------------
--- !<%21>
Banana: !R
  x: 1
  y: -10.0
Apple: !R
  x: 5
  y: 42.0
Orange: !R
  x: 13
  y: 106.7
...


-------------------
***deserializer init***
deserializing type: map(string,R,false)
		***deserializer copy init***
		expecting event: MappingStart
Initializing with file offset: 0
deserializing type: string
		expecting event: Scalar
	Got: Banana
deserializing type: R
		***deserializer copy init***
	startRecord: R size: 2
		expecting event: MappingStart
		expecting event: Scalar
deserializing type: int(64)
		expecting event: Scalar
	Got: 1
		expecting event: Scalar
deserializing type: real(64)
		expecting event: Scalar
	Got: -10.0
	endRecord
		expecting event: MappingEnd
		***deserializer deinit***
		***deserializer deinit***
deserializing type: string
		expecting event: Scalar
	Got: Apple
deserializing type: R
		***deserializer copy init***
	startRecord: R size: 2
		expecting event: MappingStart
		expecting event: Scalar
deserializing type: int(64)
		expecting event: Scalar
	Got: 5
		expecting event: Scalar
deserializing type: real(64)
		expecting event: Scalar
	Got: 42.0
	endRecord
		expecting event: MappingEnd
		***deserializer deinit***
		***deserializer deinit***
deserializing type: string
		expecting event: Scalar
	Got: Orange
deserializing type: R
		***deserializer copy init***
	startRecord: R size: 2
		expecting event: MappingStart
		expecting event: Scalar
deserializing type: int(64)
		expecting event: Scalar
	Got: 13
		expecting event: Scalar
deserializing type: real(64)
		expecting event: Scalar
	Got: 106.7
	endRecord
		expecting event: MappingEnd
		***deserializer deinit***
		***deserializer deinit***
deserializing type: string
		expecting event: Scalar
		WARNING: unexpected event: MappingEnd
		expecting event: MappingEnd
		***deserializer deinit***
		***deserializer deinit***
SUCCESS: map(string,R,false)
		***deserializer deinit***
		***deserializer deinit***
===== writing: =====
{ (x = 1, y = -10.0) : Banana , (x = 5, y = 42.0) : Apple , (x = 13, y = 106.7) : Orange }
--------------------
serializing value: { (x = 1, y = -10.0) : Banana , (x = 5, y = 42.0) : Apple , (x = 13, y = 106.7) : Orange }
			emitting mapping start event
serializing value: (x = 1, y = -10.0)
	starting record: R size: 2
			emitting mapping start event
		serializing field: x = 1
			emitting scalar event: x
serializing value: 1
			emitting scalar event: 1
		serializing field: y = -10.0
			emitting scalar event: y
serializing value: -10.0
			emitting scalar event: -10.0
	ending record
			emitting mapping end event
serializing value: Banana
			emitting scalar event: Banana
serializing value: (x = 5, y = 42.0)
	starting record: R size: 2
			emitting mapping start event
		serializing field: x = 5
			emitting scalar event: x
serializing value: 5
			emitting scalar event: 5
		serializing field: y = 42.0
			emitting scalar event: y
serializing value: 42.0
			emitting scalar event: 42.0
	ending record
			emitting mapping end event
serializing value: Apple
			emitting scalar event: Apple
serializing value: (x = 13, y = 106.7)
	starting record: R size: 2
			emitting mapping start event
		serializing field: x = 13
			emitting scalar event: x
serializing value: 13
			emitting scalar event: 13
		serializing field: y = 106.7
			emitting scalar event: y
serializing value: 106.7
			emitting scalar event: 106.7
	ending record
			emitting mapping end event
serializing value: Orange
			emitting scalar event: Orange
			emitting mapping end event
--- !<%21>
? !R
  x: 1
  y: -10.0
: Banana
? !R
  x: 5
  y: 42.0
: Apple
? !R
  x: 13
  y: 106.7
: Orange
...

====================
serializing value: { (x = 1, y = -10.0) : Banana , (x = 5, y = 42.0) : Apple , (x = 13, y = 106.7) : Orange }
			emitting mapping start event
serializing value: (x = 1, y = -10.0)
	starting record: R size: 2
			emitting mapping start event
		serializing field: x = 1
			emitting scalar event: x
serializing value: 1
			emitting scalar event: 1
		serializing field: y = -10.0
			emitting scalar event: y
serializing value: -10.0
			emitting scalar event: -10.0
	ending record
			emitting mapping end event
serializing value: Banana
			emitting scalar event: Banana
serializing value: (x = 5, y = 42.0)
	starting record: R size: 2
			emitting mapping start event
		serializing field: x = 5
			emitting scalar event: x
serializing value: 5
			emitting scalar event: 5
		serializing field: y = 42.0
			emitting scalar event: y
serializing value: 42.0
			emitting scalar event: 42.0
	ending record
			emitting mapping end event
serializing value: Apple
			emitting scalar event: Apple
serializing value: (x = 13, y = 106.7)
	starting record: R size: 2
			emitting mapping start event
		serializing field: x = 13
			emitting scalar event: x
serializing value: 13
			emitting scalar event: 13
		serializing field: y = 106.7
			emitting scalar event: y
serializing value: 106.7
			emitting scalar event: 106.7
	ending record
			emitting mapping end event
serializing value: Orange
			emitting scalar event: Orange
			emitting mapping end event
-------------------
--- !<%21>
? !R
  x: 1
  y: -10.0
: Banana
? !R
  x: 5
  y: 42.0
: Apple
? !R
  x: 13
  y: 106.7
: Orange
...


-------------------
***deserializer init***
deserializing type: map(R,string,false)
		***deserializer copy init***
		expecting event: MappingStart
Initializing with file offset: 0
deserializing type: R
		***deserializer copy init***
	startRecord: R size: 2
		expecting event: MappingStart
		expecting event: Scalar
deserializing type: int(64)
		expecting event: Scalar
	Got: 1
		expecting event: Scalar
deserializing type: real(64)
		expecting event: Scalar
	Got: -10.0
	endRecord
		expecting event: MappingEnd
		***deserializer deinit***
		***deserializer deinit***
deserializing type: string
		expecting event: Scalar
	Got: Banana
deserializing type: R
		***deserializer copy init***
	startRecord: R size: 2
		expecting event: MappingStart
		expecting event: Scalar
deserializing type: int(64)
		expecting event: Scalar
	Got: 5
		expecting event: Scalar
deserializing type: real(64)
		expecting event: Scalar
	Got: 42.0
	endRecord
		expecting event: MappingEnd
		***deserializer deinit***
		***deserializer deinit***
deserializing type: string
		expecting event: Scalar
	Got: Apple
deserializing type: R
		***deserializer copy init***
	startRecord: R size: 2
		expecting event: MappingStart
		expecting event: Scalar
deserializing type: int(64)
		expecting event: Scalar
	Got: 13
		expecting event: Scalar
deserializing type: real(64)
		expecting event: Scalar
	Got: 106.7
	endRecord
		expecting event: MappingEnd
		***deserializer deinit***
		***deserializer deinit***
deserializing type: string
		expecting event: Scalar
	Got: Orange
deserializing type: R
		***deserializer copy init***
	startRecord: R size: 2
		expecting event: MappingStart
		WARNING: unexpected event: MappingEnd
